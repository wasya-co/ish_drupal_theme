<?php

/**
 * @file
 * Functions to support theming.
 */

/**
 * Implements hook_preprocess_image_widget().
 */
function ish_drupal_theme_preprocess_image_widget(array &$variables) {
  $data = &$variables['data'];

  // This prevents image widget templates from rendering preview container HTML
  // to users that do not have permission to access these previews.
  // @todo revisit in https://drupal.org/node/953034
  // @todo revisit in https://drupal.org/node/3114318
  if (isset($data['preview']['#access']) && $data['preview']['#access'] === FALSE) {
    unset($data['preview']);
  }
}

/**
 * Implements hook_theme().
 *
 * Register a module or theme's theme implementations.
 * The implementations declared by this hook specify how a
 * particular render array is to be rendered as HTML.
 *
 * See: https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Render%21theme.api.php/function/hook_theme/8.2.x
 *
 * If you change this method, clear theme registry and routing
 * table 'drush cc theme-registry' and 'drush cc router'.
 */
function ish_drupal_theme_theme($existing, $type, $theme, $path) {

  return [
    // Name of the theme hook. This is used in the controller to trigger the hook.
    'ish_drupal_theme_theme_hook' => [
      'render element' => 'children',
      // If no template name is defined here,
      // it defaults to the name of the theme hook,
      // ie. module-name-theme-hook.html.twig
      'template' => 'module-name-theme-hook',
      // Optionally define variables that will be passed to the Twig
      // template and set default values for them.
      'variables' => [
        'variable1' => 'Yet another default text.',
        'variable2' => 0,
        'variable3' => [0, 0, 0],
      ],
    ],
  ];

}

